<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Datagrid.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <SolidColorBrush Color="#3F3F41" x:Key="DarkWindow.Background" />
    
    <Thickness x:Key="BorderMargin">4</Thickness>
    <Thickness x:Key="RightBorderMargin" Right="2"/>

    <SolidColorBrush Color="#B8B8BE" x:Key="DarkLabel.Foreground" />
    <SolidColorBrush Color="#3F3F41" x:Key="DarkLabel.Background" />
    
    <SolidColorBrush Color="#B8B8BE" x:Key="DarkButton.Foreground" />
    <SolidColorBrush Color="#3F3F41" x:Key="DarkButton.Background" />
    <SolidColorBrush Color="#3F3F41" x:Key="DarkButton.Highlight.Foreground" />
    <SolidColorBrush Color="#B8B8BE" x:Key="DarkButton.Highlight.Background" />

    <SolidColorBrush Color="White" x:Key="Theme.VeryLightColor" />
    <SolidColorBrush Color="#FF53CAFC" x:Key="Theme.HighlightColor" />
    <SolidColorBrush Color="#FF8DD8F8" x:Key="Theme.ToggleColor" />
    <SolidColorBrush Color="#FFD1D2D4" x:Key="Theme.LightColor" />
    <SolidColorBrush Color="#727375" x:Key="Theme.IntermediateColor" />
    <SolidColorBrush Color="#3F3F41" x:Key="Theme.DarkColor" />
    <SolidColorBrush Color="#211F20" x:Key="Theme.VeryDarkColor" />
    
    <SolidColorBrush Color="#211F20" x:Key="Theme.Background"/>
    <SolidColorBrush Color="#3F3F41" x:Key="Theme.BackgroundBorder"/>
    <SolidColorBrush Color="#211F20" x:Key="Theme.Border.Highlight" />

    <SolidColorBrush Color="#727375" x:Key="Theme.InactiveColor" />
    <SolidColorBrush Color="{Binding Source={StaticResource Theme.InactiveColor}, Path=Color}" x:Key="DarkWindow.InactiveBackground" />

    <Style TargetType="{x:Type ListView}">
        <Setter Property="Background" Value="{StaticResource Theme.DarkColor}" />
        <Setter Property="Foreground" Value="{StaticResource Theme.LightColor}" />
        <Setter Property="BorderThickness" Value="0" />

        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="4" />
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="ListViewItem">
        <Setter Property="TextBlock.TextAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource Theme.DarkColor}" />
        <Setter Property="Foreground" Value="{StaticResource Theme.LightColor}" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <DockPanel Background="Transparent">
                        <DockPanel>
                            <ContentPresenter />
                            <DockPanel.Style>
                                <Style TargetType="DockPanel">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}" Value="True">
                                            <Setter Property="Background" Value="{StaticResource Theme.LightColor}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DockPanel.Style>
                        </DockPanel>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Theme.IntermediateColor}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Theme.IntermediateColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ItemsControl}">
        <Setter Property="Background" Value="{StaticResource Theme.DarkColor}" />
        <Setter Property="Foreground" Value="{StaticResource Theme.LightColor}" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{StaticResource Theme.VeryDarkColor}" />
        <Setter Property="Foreground" Value="{StaticResource Theme.LightColor}" />
    </Style>

    <Style TargetType="{x:Type Button}">
        <Setter Property="Height" Value="22" />
        <Setter Property="Foreground" Value="{StaticResource Theme.VeryLightColor}" />
        <Setter Property="Background" Value="{StaticResource Theme.IntermediateColor}" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{StaticResource Theme.IntermediateColor}"
                        CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Theme.HighlightColor}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource Theme.IntermediateColor}" />
                <Setter Property="Foreground" Value="{StaticResource Theme.LightColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ToggleButton}" >
        <Setter Property="Height" Value="22" />
        <Setter Property="Foreground" Value="{StaticResource Theme.VeryLightColor}" />
        <Setter Property="Background" Value="{StaticResource Theme.IntermediateColor}" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{StaticResource Theme.IntermediateColor}"
                        CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Theme.IntermediateColor}" />
                <Setter Property="Background" Value="{StaticResource Theme.LightColor}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource Theme.IntermediateColor}" />
                <Setter Property="Foreground" Value="{StaticResource Theme.LightColor}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource Theme.LightColor}" />
                <Setter Property="Foreground" Value="{StaticResource Theme.IntermediateColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource Theme.LightColor}" />
    </Style>

    <Style TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{StaticResource Theme.LightColor}" />
    </Style>

    <Style x:Key="DarkDataGrid" BasedOn="{StaticResource SimpleDataGrid}" TargetType="{x:Type DataGrid}">
        <Setter Property="RowHeaderWidth" Value="0" />
        <Setter Property="Background" Value="{StaticResource Theme.DarkColor}" />
        <Setter Property="BorderBrush" Value="{StaticResource Theme.VeryDarkColor}" />
    </Style>
    
    <Style BasedOn="{StaticResource DarkDataGrid}" TargetType="{x:Type DataGrid}"/>

    
    <Style x:Key="DarkDataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Foreground" Value="{StaticResource Theme.LightColor}" />
        <Setter Property="Background" Value="{StaticResource Theme.DarkColor}" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="DemiBold" />
    </Style>
    
    <Style BasedOn="{StaticResource DarkDataGridColumnHeaderStyle}" TargetType="{x:Type DataGridColumnHeader}"/>
    
    
    <Style x:Key="DarkDataGridRowHeader" TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Foreground" Value="{StaticResource Theme.LightColor}" />
        <Setter Property="Background" Value="{StaticResource Theme.DarkColor}" />
    </Style>
    
    <Style BasedOn="{StaticResource DarkDataGridRowHeader}" TargetType="{x:Type DataGridRowHeader}"/>
    
    
    <Style x:Key="DarkDataGridCellStyle"  TargetType="DataGridCell">
        <Setter Property="TextBlock.TextAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource Theme.DarkColor}" />
        <Setter Property="Foreground" Value="{StaticResource Theme.LightColor}" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style BasedOn="{StaticResource DarkDataGridCellStyle}" TargetType="{x:Type DataGridCell}"/>



    <Style x:Key="DarkCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{StaticResource Theme.LightColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border"
                                    Width="13"
                                    Height="13"
                                    CornerRadius="2"
                                    BorderBrush="{StaticResource Theme.LightColor}"
                                    Background="{StaticResource Theme.VeryDarkColor}"
                                    BorderThickness="1">
                                <Grid>
                                    <Path Visibility="Collapsed"
                                          Width="7"
                                          Height="7"
                                          StrokeThickness="1"
                                          SnapsToDevicePixels="False"
                                          x:Name="CheckMark"
                                          Stretch="Fill"
                                          Stroke="{StaticResource Theme.VeryDarkColor}"
                                          Data="M 9.0975748 20.644889 0.39127282 12.093505 1.4380791 11.021406 9.1043085 18.547625 22.336956 4.4962022 23.608078 5.544835 Z">
                                    </Path>
                                    <Path Visibility="Collapsed"
                                          Width="7"
                                          Height="7"
                                          x:Name="InderminateMark"
                                          SnapsToDevicePixels="False"
                                          StrokeThickness="2"
                                          Stroke="{StaticResource Theme.LightColor}"
                                          Data="M 0 7 L 7 0">
                                    </Path>
                                </Grid>
                            </Border>
                        </BulletDecorator.Bullet>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(UIElement.Visibility)"
                                            Storyboard.TargetName="CheckMark">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetProperty="(UIElement.Visibility)"
                                            Storyboard.TargetName="InderminateMark">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter Margin="4,0,0,0"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left"
                                          RecognizesAccessKey="True" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Visibility, ElementName=CheckMark}" Value="Visible">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Theme.ToggleColor}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Theme.ToggleColor}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="DarkRoundedBorder" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Background" Value="{StaticResource Theme.BackgroundBorder}"/>
    </Style>
    
    <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource DarkCheckBoxStyle}"/>
    
    <Style x:Key="DarkCheckBoxColumnStyle" TargetType="CheckBox" BasedOn="{StaticResource DarkCheckBoxStyle}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

</ResourceDictionary>
